<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on Whde</title>
    <link>https://whde.github.io/tags/mysql/</link>
    <description>Recent content in MySQL on Whde</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 May 2019 11:09:49 +0800</lastBuildDate>
    
	<atom:link href="https://whde.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>笑话服务端，配和JokeMysql使用</title>
      <link>https://whde.github.io/posts/jokeserver/</link>
      <pubDate>Sat, 25 May 2019 11:09:49 +0800</pubDate>
      
      <guid>https://whde.github.io/posts/jokeserver/</guid>
      <description>JokeServer 笑话服务端，配和JokeMysql使用
github地址</description>
    </item>
    
    <item>
      <title>爬取笑话网站数据，存储到MySQL数据库</title>
      <link>https://whde.github.io/posts/jokemysql/</link>
      <pubDate>Sat, 25 May 2019 11:08:49 +0800</pubDate>
      
      <guid>https://whde.github.io/posts/jokemysql/</guid>
      <description>爬取笑话网站数据，存储到MySQL数据库 怎么爬取数据在Python爬取笑话数据中有详细说明
本文基于这篇文章进行，将数据存储到MySQL
首先要连接MySQL，需要引入 pymysql
import pymysql  接着连接MySQL，并创建我们的table，db=joke需要事先创建好
def connectdb(): db1 = pymysql.connect( host=&amp;quot;localhost&amp;quot;, user=&amp;quot;root&amp;quot;, passwd=&amp;quot;666666&amp;quot;, port=3306, db=&amp;quot;joke&amp;quot;) cursor = db1.cursor() cursor.execute(&amp;quot;DROP TABLE IF EXISTS joke&amp;quot;) sql = &amp;quot;&amp;quot;&amp;quot;CREATE TABLE joke (herf TEXT NOT NULL, title TEXT, date TEXT, detail TEXT)&amp;quot;&amp;quot;&amp;quot; try: cursor.execute(sql) cursor.execute(&amp;quot;&amp;quot;&amp;quot;SET SQL_SAFE_UPDATES = 0;&amp;quot;&amp;quot;&amp;quot;) pass except Exception as e: print(str(e)) pass return db1  接下来就是这么存到数据库中，我们存储连接(herf)，标题(title)，发布时间(date)，详情(detail)。如果存储失败，我们需要回滚操作
def insetdb(db1, herf, title, date, detail): sql = &amp;quot;insert into joke(herf, title, date, detail) \ values (&#39;%s&#39;, &#39;%s&#39;, &#39;%s&#39;, &#39;%s&#39;);&amp;quot; % \ (herf, title, date, detail) try: cursor = db1.</description>
    </item>
    
  </channel>
</rss>